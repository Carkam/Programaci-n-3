/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lab2a;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;

/**
 *
 * @author KAMINATOR
 */
public class IngresoNuevaNomina extends javax.swing.JFrame {
int iCodigo=1, iCodigoObtenido;
int iDia,iMes,iAño,iDiaActual,iMesActual,iAñoActual;

String sFechaInicial,sFechaFinal;
SimpleDateFormat sdfFormat=new SimpleDateFormat("yyyy-MM-dd");
    /**
     * Creates new form IngresoNuevaNomina
     */
    public IngresoNuevaNomina() {
        initComponents();
        codigo();
        funFechaFinal();
    }
public void codigo(){
    /*Se obtiene el codigo maximo para sumarle uno y guardarlo en la base de datos*/
            try{
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/nomina", "root", "");
            PreparedStatement pst = cn.prepareStatement("SELECT * FROM nominaencabezado ORDER BY nomicodigo DESC");                 
            ResultSet rs = pst.executeQuery();         
            if(rs.next()){ 
                iCodigoObtenido=Integer.parseInt(rs.getString(1));          
                iCodigo=iCodigoObtenido+1;                          
            }            
            cn.close();
        }catch (Exception e){
            JOptionPane.showMessageDialog(null,"Error no se puede obtener el codigo"+ e);
        }
}
public void funFechaFinal(){
    /*Muestra la fecha final del anterior registro y llama al metodo de nueva fecha*/
       try{
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/nomina", "root", "");
            PreparedStatement pst = cn.prepareStatement("SELECT fecha_final_nomina FROM nominaencabezado WHERE nomicodigo=?");  
            pst.setString(1,Integer.toString(iCodigoObtenido) );
            ResultSet rs = pst.executeQuery(); 
            if(rs.next()){
               sFechaInicial=rs.getString("fecha_final_nomina");  
              funNuevafecha();
            }                      
            cn.close();
        }catch (Exception e){
           JOptionPane.showMessageDialog(null,"Error no se puede obtener la fehca final de la nomina anterior"+ e);
        }
}
public void funNuevafecha(){
    /*Este metodo verificara la fecha anterior para poder incrementarla en un dia y mostrarala en el label*/
    int iDias = 0,iMeses=0,iAños=0;
    String sDias,sMeses;
         StringTokenizer stTokens=new StringTokenizer(sFechaInicial,"-");        
        while(stTokens.hasMoreTokens()){
        iAños=Integer.parseInt(stTokens.nextToken());
        iMeses=Integer.parseInt(stTokens.nextToken());
        iDias=Integer.parseInt(stTokens.nextToken());
        }
        
       if ((iDias==31 && iMeses==1)|| (iDias==31 && iMeses==3)||(iDias==31 && iMeses==5)||(iDias==31 && iMeses==7)||(iDias==31 && iMeses==8)||(iDias==31 && iMeses==10)|| (iDias==31 && iMeses==12)) {           
            iDias=iDias-30; 
            iMeses=iMeses+1;
            if (iMeses==12) {
               iMeses=iMeses-11;
               iAños++;
           }
       }else if ((iDias==30 && iMeses==4)||(iDias==30 && iMeses==6)||(iDias==30 && iMeses==9)||(iDias==30 && iMeses==11)) {
           iDias=iDias-29;
           iMeses=iMeses+1;           
       }else if ((iDias==29)&&(iMeses==2)) {
        iDias=iDias-28;
        iMeses=iMeses+1; 
        }else if (iDias==28 && iMeses==2) {
         iDias=iDias-27;
        iMeses=iMeses+1;
    }
       if (iDias<10) {
           sDias="0"+iDias;
        }else{
           sDias=Integer.toString(iDias);
       }
       if (iMeses<10) {
        sMeses="0"+iMeses;
      }else{
           sMeses=Integer.toString(iMeses);
       }
        lblFechaIncial.setText(iAños+"-"+sMeses+"-"+sDias);  
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        lblFechaIncial = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Nueva Nomina");

        jLabel2.setText("Fecha Inicial");

        jLabel3.setText("Fecha Final");

        jDateChooser2.setDateFormatString("yyyy-MM-dd");

        jButton1.setText("Añadir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lblFechaIncial.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblFechaIncial.setText("jLabel4");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1)
                                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addComponent(lblFechaIncial, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(89, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblFechaIncial, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(jButton1)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public void funCOnsulta(){
    /*Metodo para ingresar los datos en la tabla*/
    codigo();   
            try{
                Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/nomina", "root", "");
                PreparedStatement pst = cn.prepareStatement("insert into nominaencabezado values(?,?,?,?)");

                pst.setString(1, Integer.toString(iCodigo));
                pst.setString(2, lblFechaIncial.getText());
                pst.setString(3, sdfFormat.format(jDateChooser2.getDate()));
                pst.setString(4, Integer.toString(0));
                pst.executeUpdate();            
                JOptionPane.showMessageDialog(null,"Ingreso de datos Exitoso");
                iCodigo=1;
            cn.close();
            }catch (Exception e){
               JOptionPane.showMessageDialog(null,"Error no se puede ingresar la informacion"+ e);
            }
}
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      /*Boton para guardar los datos y seprar en tokens para verificar si las fechas son iguales o anteriores*/
        String sFecha=lblFechaIncial.getText();
        StringTokenizer stTokens=new StringTokenizer(sFecha,"-");        
        while(stTokens.hasMoreTokens()){
        iAño=Integer.parseInt(stTokens.nextToken());
        iMes=Integer.parseInt(stTokens.nextToken());
        iDia=Integer.parseInt(stTokens.nextToken());
        }
       StringTokenizer stToken=new StringTokenizer((String) sdfFormat.format(jDateChooser2.getDate()),"-");        
        while(stToken.hasMoreTokens()){
        iAñoActual=Integer.parseInt(stToken.nextToken());
        iMesActual=Integer.parseInt(stToken.nextToken());
        iDiaActual=Integer.parseInt(stToken.nextToken());
        }
        if (((iDiaActual<=(iDia+1))&&(iMesActual<=iMes)&&(iAñoActual<=iAño))||((iDiaActual>=(iDia+1))&&(iMesActual<iMes)&&(iAñoActual<=iAño))) {
            JOptionPane.showMessageDialog(null,"La fecha Final no puede ser antes o igual a la fecha inicial");
        }else{
            funCOnsulta();
            JOptionPane.showMessageDialog(null,"Nueva Nomina Creada");
            codigo();
            funFechaFinal();
        }
      
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IngresoNuevaNomina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IngresoNuevaNomina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IngresoNuevaNomina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IngresoNuevaNomina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IngresoNuevaNomina().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblFechaIncial;
    // End of variables declaration//GEN-END:variables
}
